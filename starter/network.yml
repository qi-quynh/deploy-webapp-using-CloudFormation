Description: 
  QuynhLTD / Udacity
  Deploy Infrastructure as Code (IAC) / Deploy a high-availability web app using CloudFormation

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPCIP:
    Description: IP of Virtual Private Cloud (VPC).
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1IP:
    Description: IP for public subnet in the 1st Az
    Type: String
    Default: 10.0.1.0/24

  PublicSubnet2IP:
    Description: IP for public subnet in the 2nd Az
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet1IP:
    Description: IP for private subnet in the 1st Az
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnet2IP:
    Description:  IP for private subnet in the 2nd Az
    Type: String
    Default: 10.0.4.0/24

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCIP
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  MyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref MyInternetGateway

  MyNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: MyVPCGatewayAttachment
    Properties:
      Domain: vpc

  MyNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: MyVPCGatewayAttachment
    Properties:
      Domain: vpc

  PublicRouteDefault:
    Type: AWS::EC2::Route
    DependsOn: MyVPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref MyPublicRouteTable
      GatewayId: !Ref MyInternetGateway

  PrivateRoute1Default:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref MyPrivateRouteTable1
      NatGatewayId: !Ref MyNatGateway1

  PrivateRoute2Default:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref MyPrivateRouteTable2
      NatGatewayId: !Ref MyNatGateway2

  MyPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  PublicSubnet1:
    Description: Public subnet in the 1st Az
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1IP
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 1 (AZ1)
  
  PublicSubnet2:
    Description: Public subnet in the 2nd Az
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2IP
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet 2 (AZ2)

  MyNatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt MyNatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  
  MyNatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt MyNatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2

  MyPublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      SubnetId: !Ref PublicSubnet1

  MyPublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1IP
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 1 (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2IP
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet 2 (AZ2)

  MyPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)
  
  MyPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  MyPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref MyPrivateRouteTable1

  MyPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref MyPrivateRouteTable2

Outputs:
  VPC:
    Description: VPC Output 
    Value: !Ref VPC
    Export:
      Name: VPCOutput

  PublicSubnet1Output:
    Description: Public Subnet 1 Output 
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1Output

  PublicSubnet2Output:
    Description: Public Subnet 2 Output 
    Value: !Ref PublicSubnet2
    Export:
      Name:  PublicSubnet2Output
  
  PrivateSubnet1Output:
    Description: Private Subnet 1 Output 
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1Output

  PrivateSubnet2Output:
    Description: Private Subnet 2 Output 
    Value: !Ref PrivateSubnet2
    Export:
      Name:  PrivateSubnet2Output